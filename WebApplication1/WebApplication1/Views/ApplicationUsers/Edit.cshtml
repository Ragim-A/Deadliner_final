@model DeadLiner.Models.ApplicationUser

@{
    ViewBag.Title = "Edit";   
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <section class="manager">
        <div class="header  ">
            <h1>Add New User</h1>
        </div>

        <div class="container-fluid eight">
            <div class="row">
                <div class="col-md-8">
                    <div class="content">
                        <div class=" col-md-12 empty">
                            <h3>User Details</h3>
                        </div>
                        <div class="row user">
                            <div class="col-md-6 form">
                                <p>First Name</p>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 form">
                                <p>Surname</p>
                                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 form">
                                <p>User Type</p>
                                @Html.DropDownListFor(x => x.Gender, new SelectList(new[] { "Male", "Female" }), "Select Gender")
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 form">
                                <p>Mobile No.</p>
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 form">
                                <p>Email</p>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            @Html.HiddenFor(x => x.AccessFailedCount)
                            @Html.HiddenFor(x => x.EmailConfirmed)
                            @Html.HiddenFor(x => x.LockoutEnabled)
                            @Html.HiddenFor(x => x.LockoutEndDateUtc)
                            @Html.HiddenFor(x => x.PasswordHash)
                            @Html.HiddenFor(x => x.PhoneNumberConfirmed)
                            @Html.HiddenFor(x => x.SecurityStamp)
                            @Html.HiddenFor(x => x.TwoFactorEnabled)
                            <div class=" col-md-12">
                                <div class="empty">
                                    <h3>Login Details</h3>
                                </div>
                            </div>
                            <div class="col-md-6 form">
                                <p>User Type</p>
                                @Html.DropDownListFor(x => x.UserStatus, new SelectList(new[] { "Teacher", "Student" }), "Select User Status")
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 form">
                                <p>User Name</p>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 four">
                    <div class="asd">
                        <div class=" col-md-12 empty">
                            <h3>Status</h3>
                        </div>
                        <div class="col-md-12 btn">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

