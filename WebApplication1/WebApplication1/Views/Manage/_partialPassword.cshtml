@model DeadLiner.Models.ChangePasswordViewModel

@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="work-play">
        <h3>Settings</h3>
        <h4>Change Password Form</h4>
        <hr />
        <h4>Old Password</h4>
        <form>
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
        </form>
        <h4>New Password</h4>
        <form>
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
        </form>
        <h4>Re-Type Password</h4>
        <form>
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </form>
    </div>
    <div class="update">
        <input type="submit" value="Change password" class="btn btn-default" />
        <a href="#">Update</a>
    </div>
    @*@Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Change password" class="btn btn-default" />
        </div>
    </div>*@
}
@section PasswordScripts {
    @Scripts.Render("~/bundles/jqueryval")
}