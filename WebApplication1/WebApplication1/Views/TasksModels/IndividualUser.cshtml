@model IEnumerable<DeadLiner.Models.TaskAnswerView>
@{
    ViewBag.Title = "Individual User";
}

<div class="tablecontainer">
    <div style="display: flex; align-items: baseline;" class="alert alert-info">
        <p style="padding-right: 5px; font-family: 'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 20px;">
            Please select a User:
        </p>
        <p>
            @Html.DropDownList("id", ViewBag.Users as IEnumerable<SelectListItem>, "Selected User", new { @class = "selectpicker" })
        </p>
    </div>
    <table class="table table-bordered ui" id="myTable" width="100%">
        <thead>
            <tr>
                <th>
                    Details
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Heading)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EndDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedOn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
            </tr>
        </thead>
    </table>
</div>


@section scripts
{
    <script>
        $(document).ready(function () {
            $.fn.dataTable.moment('DD/MM/YYYY');
            $.fn.dataTable.moment('dddd, DD/MM/YYYY');

            function format(d) {                
                var trs = '';
                for (var i = 0; i < d.ttu.length; i++) {
                    var a = d.ttu[i].user[0];
                    var b = d.ttu[i].reply[0];
                    var arraya = $.map(a,
                        function (value, index) {
                            return [value];
                        });
                    var arrayb = $.map(b,
                        function (value, index) {
                            return [value];
                        });

                    $.each($(arraya),
                        function (key, value) {
                            trs += '<tr>' +
                                '<td>' + value + '</td>' +
                                '<td>' +
                                (arrayb[key] != null ? '<a href=' + arrayb[key] + '>' + arrayb[key] + '</a>' : "") +
                                '</td>' +
                                '<td>' +
                                (arrayb[key + 1] != null
                                    ? moment(arrayb[key + 1]).format("MMMM Do YYYY, HH:mm")
                                    : "") +
                                '</td>' +
                                '</tr>';
                        });
                }

                return '<div class="slider">'+
                    '<table class="table table-hover" border="0" cellspacing="0">' +
                    '<thead>'+
                    '<th>Assigned To :</th>'+
                    '<th style="border:0;">Answer :</th>' +
                    '<th style="border:0;">Answer Time :</th>' +
                    '</thead><tbody>' +
           	
                    trs+
                    '</tbody>' +
                    '</table>' +
                    '</div>';                
            }

            var oTable = $("#myTable").DataTable({
                responsive: true,
                "ajax": {
                    "url": "/TasksModels/IndividualUserGetData",
                    "type": "get",
                    "datatype": "json"
                },
                "columnDefs": [
                    { "className": "dt-center", "targets": 6 }
                ],
                "order": [[3]],
                "columns": [
                    {
                        "class": "details-control",
                        "orderable": false,
                        "data": null,
                        "defaultContent": ""
                    },
                    { "data": "Heading", "autoWidth": true },
                    {
                        "data": "StartDate",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            if (type === 'display' || type === 'filter') {
                                var rowvalueallday = row["EndDate"];
                                if (rowvalueallday == 0) {
                                    return (moment(data).format("ddd DD/MM/YYYY"));
                                } else {
                                    return (moment(data).format("MMMM Do YYYY, HH:mm"));
                                }
                            }
                            return data;
                        }
                    },
                    {
                        "data": "EndDate",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            if (type === 'display' || type === 'filter') {
                                var rowvalueallday = row["EndDate"];
                                if (rowvalueallday == 0) {
                                    return (moment(data).format("ddd DD/MM/YYYY"));
                                } else {
                                    return (moment(data).format("MMMM Do YYYY, HH:mm"));
                                }
                            }
                            return data;
                        }
                    },
                    { "data": "CreatedBy", "autoWidth": true },
                    {
                        "data": "CreatedOn",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            if (type === 'display' || type === 'filter') {
                                var rowvalueallday = row["EndDate"];
                                if (rowvalueallday == 0) {
                                    return (moment(data).format("ddd DD/MM/YYYY"));
                                } else {
                                    return (moment(data).format("MMMM Do YYYY, HH:mm"));
                                }
                            }
                            return data;
                        }
                    },
                    {
                        "data": "Status",
                        "autoWidth": true,
                        "render": function (data) {
                            if (data == "Open") {
                                return '<i class="fa fa-unlock bat" aria-hidden="true" style="color:green;"></i>';
                            }
                            return '<i class="fa fa-lock bat" aria-hidden="true" style="color:red;"></i>';
                        }
                    }
                ]
            });

            var detailRows = [];

            $('#myTable tbody').on('click',
                'td.details-control',
                function () {
                    var tr = $(this).closest('tr');
                    var row = oTable.row(tr);

                    if (row.child.isShown()) {
                        $('div.slider', row.child()).slideUp(function () {
                            row.child.hide();
                            tr.removeClass('shown');
                            tr.removeClass('highlightExpanded');
                        });

                    }
                    else {
                        row.child(format(row.data()), 'no-padding').show();
                        tr.addClass('shown');
                        tr.addClass('highlightExpanded');

                        $('div.slider', row.child()).slideDown();
                    }
                });

            // On each draw, loop over the `detailRows` array and show any child rows
            oTable.on('draw',
                function () {
                    $.each(detailRows,
                        function (i, id) {
                            $('#' + id + ' td.details-control').trigger('click');
                        });
                });

            $('#id').change(function () {
                var selectedValue = $(this).val();
                $('#myTable').DataTable().destroy();
                function format(d) {                    
                    if (d.ttu.length>1) {
                        var trs = '';
                        for (var i = 0; i < d.ttu.length; i++) {
                            var a = d.ttu[i].user[0];
                            var b = d.ttu[i].reply[0];
                            var arraya = $.map(a,
                                function (value, index) {
                                    return [value];
                                });
                            var arrayb = $.map(b,
                                function (value, index) {
                                    return [value];
                                });

                            $.each($(arraya),
                                function (key, value) {
                                    trs += '<tr>' +
                                        '<td>' + value + '</td>' +
                                        '<td>' +
                                        (arrayb[key] != null ? '<a href=' + arrayb[key] + '>' + arrayb[key] + '</a>' : "") +
                                        '</td>' +
                                        '<td>' +
                                        (arrayb[key + 1] != null
                                            ? moment(arrayb[key + 1]).format("MMMM Do YYYY, HH:mm")
                                            : "") +
                                        '</td>' +
                                        '</tr>';
                                });
                        }
                    }
                    var trs = '';
                    for (var i = 0; i < d.ttu.length; i++) {
                        var a = d.ttu[i].user[0];
                        var b = d.ttu[i].reply[0];
                        var arraya = $.map(a,
                            function (value, index) {
                                return [value];
                            });
                        var arrayb = $.map(b,
                            function (value, index) {
                                return [value];
                            });

                        $.each($(arraya),
                            function (key, value) {
                                trs += '<tr>' +                                    
                                    '<td>' +
                                    (arrayb[key] != null ? '<a href=' + arrayb[key] + '>' + arrayb[key] + '</a>' : "") +
                                    '</td>' +
                                    '<td>' +
                                    (arrayb[key + 1] != null
                                        ? moment(arrayb[key + 1]).format("MMMM Do YYYY, HH:mm")
                                        : "") +
                                    '</td>' +
                                    '</tr>';
                            });
                    }

                    return '<div class="slider">' +
                        '<table class="table table-border table-hover">' +
                        '<thead>' +                        
                        '<th style="border:0;">Answer :</th>' +
                        '<th style="border:0;">Answer Time :</th>' +
                        '</thead><tbody>' +
                        trs +
                        '</tbody>' +
                        '</table>' +
                        '</div>';
                }
                
                var oTable = $("#myTable").DataTable({
                    responsive: true,
                    "ajax": {
                        "url": "/TasksModels/IndividualUserGetData",
                        "type": "post",
                        "datatype": "json",
                        "data": { id: selectedValue }
                    },
                    "columnDefs": [
                        { "className": "dt-center", "targets": 6 }
                    ],
                    "order": [[3]],
                    "columns": [
                        {
                            "class": "details-control",
                            "orderable": false,
                            "data": null,
                            "defaultContent": ""
                        },
                        { "data": "Heading", "autoWidth": true },
                        {
                            "data": "StartDate",
                            "autoWidth": true,
                            "render": function (data, type, row) {
                                if (type === 'display' || type === 'filter') {
                                    var rowvalueallday = row["EndDate"];
                                    if (rowvalueallday == 0) {
                                        return (moment(data).format("ddd DD/MM/YYYY"));
                                    } else {
                                        return (moment(data).format("MMMM Do YYYY, HH:mm"));
                                    }
                                }
                                return data;
                            }
                        },
                        {
                            "data": "EndDate",
                            "autoWidth": true,
                            "render": function (data, type, row) {
                                if (type === 'display' || type === 'filter') {
                                    var rowvalueallday = row["EndDate"];
                                    if (rowvalueallday == 0) {
                                        return (moment(data).format("ddd DD/MM/YYYY"));
                                    } else {
                                        return (moment(data).format("MMMM Do YYYY, HH:mm"));
                                    }
                                }
                                return data;
                            }
                        },
                        { "data": "CreatedBy", "autoWidth": true },
                        {
                            "data": "CreatedOn",
                            "autoWidth": true,
                            "render": function (data, type, row) {
                                if (type === 'display' || type === 'filter') {
                                    var rowvalueallday = row["EndDate"];
                                    if (rowvalueallday == 0) {
                                        return (moment(data).format("ddd DD/MM/YYYY"));
                                    } else {
                                        return (moment(data).format("MMMM Do YYYY, HH:mm"));
                                    }
                                }
                                return data;
                            }
                        },
                        {
                            "data": "Status",
                            "autoWidth": true,
                            "render": function (data) {
                                if (data == "Open") {
                                    return '<i class="fa fa-unlock bat" aria-hidden="true" style="color:green;"></i>';
                                }
                                return '<i class="fa fa-lock bat" aria-hidden="true" style="color:red;"></i>';
                            }
                        }
                    ]
                });

                var detailRows = [];

                $('#myTable tbody').on('click',
                    'td.details-control',
                    function () {
                        var tr = $(this).closest('tr');
                        var row = oTable.row(tr);

                        if (row.child.isShown()) {
                            $('div.slider', row.child()).slideUp(function () {
                                row.child.hide();
                                tr.removeClass('shown');
                                tr.removeClass('highlightExpanded');
                            });

                        }
                        else {
                            row.child(format(row.data()), 'no-padding').show();
                            tr.addClass('shown');
                            tr.addClass('highlightExpanded');

                            $('div.slider', row.child()).slideDown();
                        }
                    });

                // On each draw, loop over the `detailRows` array and show any child rows
                oTable.on('draw',
                    function () {
                        $.each(detailRows,
                            function (i, id) {
                                $('#' + id + ' td.details-control').trigger('click');
                            });
                    });
            });
        });
    </script>
}

