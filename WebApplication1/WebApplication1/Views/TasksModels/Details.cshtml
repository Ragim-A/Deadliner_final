@model DeadLiner.Models.TaskViewModel

@{
    ViewBag.Title = "Details";
    Layout = null;
}
@using (Html.BeginForm(new { id = "popupForm" }))
{
    <section class="manager">
        <div class="header  ">
            <h1>Details</h1>
        </div>
        <div class="container-fluid eight">
            <div class="row">
                <div class="col-md-12">
                    <div class="content">
                        <div class="dl-horizontals">
                            <p class="margin">
                                <span class="EditHeading">@Html.DisplayNameFor(model => model.Heading):</span>
                                <span class="editContent">@Html.DisplayFor(model => model.Heading)</span>
                            </p>
                            <p class="margin">
                                <span class="EditHeading">Created By:</span>
                                <span class="editContent">@Html.DisplayFor(model => model.CreatedBy)</span>
                            </p>
                            <p class="margin">
                                <span class="EditHeading">Created On:</span>
                                <span class="editContent">@Html.DisplayFor(model => model.CreatedOn)</span>
                            </p>
                            <p class="margin">
                                <span class="EditHeading">Start Date:</span>
                                <span class="editContent">@Html.DisplayFor(model => model.StartDate)</span>
                                <span class="EditHeading">End Date:</span>
                                <span class="editContent">@Html.DisplayFor(model => model.EndDate)</span>
                            </p>
                            <p class="margin">
                                <div style="display: flex; flex-direction: column;">
                                    <div class="EditHeading">@Html.DisplayNameFor(model => model.Content):</div>
                                    <div class="editContent" id="bat">@Html.Raw(Model.Content)</div>
                                </div>
                            </p>                            
                            <div>
                                <div class="EditHeading"> Assigned Users:</div>
                                <div class="editContentAll" style="display: flex; flex-direction: column;">
                                    @foreach (var item in Model.Users.Where(x => x.Checked))
                                    {
                                        <div class="editContent">
                                            @Html.DisplayFor(model => item.Name)
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<script type="text/javascript">
    $(function () {        
        tinymce.init({
            selector: '#bat',
            height: 300,
            theme: 'modern',                       
            templates: [
                { title: 'Test template 1', content: 'Test 1' },
                { title: 'Test template 2', content: 'Test 2' }
            ],
            content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                '//www.tinymce.com/css/codepen.min.css'
            ]
        });
    });
</script>