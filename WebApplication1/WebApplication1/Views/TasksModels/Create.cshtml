@model  DeadLiner.Models.TaskViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="manager">
        <div class="header  ">
            <h1>Create Task</h1>
        </div>

        <div class="container-fluid eight">
            <div class="row">
                <div class="col-md-8">
                    <div class="content">
                        <div class=" col-md-12 empty">
                            <h3>Task Details</h3>
                        </div>
                        <div class="row user">
                            <div class="col-md-12 form">
                                <p>Heading</p>
                                @Html.EditorFor(model => model.Heading, new { htmlAttributes = new { @class = "form-control", required = "The Heading field is required." } })
                                @Html.ValidationMessageFor(model => model.Heading, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-12 form">
                                <p>Content</p>
                                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", required = "The Content field is required.", @rows = 8 })
                                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Users, new { @class = "control-label col-md-2" })
                                <div class="col-md-12" style="height: 120px; overflow-y: auto;">
                                    @for (int i = 0; i < Model.Users.Count(); i++)
                                    {
                                        @Html.EditorFor(m => m.Users[i].Checked, new { htmlAttributes = new { @style = "margin-right: 5px;" } })
                                        @Html.DisplayFor(m => m.Users[i].Name)<br />

                                        @Html.HiddenFor(m => m.Users[i].Name)
                                        @Html.HiddenFor(m => m.Users[i].Id)
                                    }
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class='input-group date col-md-12' id='datetimepicker1' style="padding-left: 15px; padding-right: 15px;">
                                    <input class="form-control text-box single-line" data-val="true" data-val-date="The field StartDate must be a date." data-val-required="The StartDate field is required." id="StartDate" name="StartDate" type="text" value="" readonly>
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>

                                </div>
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class='input-group date col-md-12' id='datetimepicker2' style="padding-left: 15px; padding-right: 15px;">
                                    <input type='text' class="form-control text-box single-line" data-val="true" data-val-date="The field EndDate must be a date." data-val-required="The EndDate field is required." id="EndDate" name="EndDate" value="" readonly />

                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 four">
                    <div class="asd">
                        <div class=" col-md-12 empty">
                            <h3>Status</h3>
                        </div>
                        <div class="col-md-12 btn">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@section scriptDateTimePicker
{
    <script type="text/javascript">
        $(function () {
            var checkBoxList = $(".check-box")

            for (var i = 0; i < checkBoxList.length; i++) {
                checkBoxList[i].checked = false;
            }

            $('#datetimepicker1').datetimepicker({
                ignoreReadonly: true,
                format: 'DD MMMM YYYY HH:mm',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                },
                minDate: moment()
            }).on('dp.change',
                function(e) {
                    $('#datetimepicker2').data("DateTimePicker").minDate(e.date)
                });

            $('#datetimepicker2').datetimepicker({
                ignoreReadonly: true,
                format: 'DD MMMM YYYY HH:mm',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            });
        });
    </script>
}
